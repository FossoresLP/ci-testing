.headers:base:
  stage: headers
  script:
    - mkdir /build $CI_PROJECT_DIR/headers
    - cd /build
    - curl -o src.tar.bz2 $SOURCE
    - tar -xf src.tar.bz2 --wildcards 'source/kernel_*' --strip-components 1
    - mv kernel_* kernel.tar.gz
    - tar -xf kernel.tar.gz --strip-components 1
    - if [ $VERSION -ne 1 ]; then make ARCH=mips ubnt_er_${DEVICE}_defconfig; fi;
    - if [ $VERSION -eq 1 ]; then cp .config $CI_PROJECT_DIR/headers/.config; fi;
    - make -j$(nproc) ARCH=mips CROSS_COMPILE=$CROSS prepare modules_prepare
    - make -j$(nproc) ARCH=mips CROSS_COMPILE=$CROSS vmlinux modules
    - cp Module.symvers $CI_PROJECT_DIR/headers
    - make mrproper
    - if [ $VERSION -ne 1 ]; then make ARCH=mips O=$CI_PROJECT_DIR/headers ubnt_er_${DEVICE}_defconfig; fi;
    - make -j$(nproc) ARCH=mips O=$CI_PROJECT_DIR/headers CROSS_COMPILE=$CROSS modules_prepare
  artifacts:
    paths:
      - headers/

.headers:mipsel:
  extends: .headers:base
  image: $CI_REGISTRY_IMAGE:mipsel
  variables:
    CROSS: mipsel-linux-gnu-
  dependencies:
    - docker:mipsel

.headers:mtk:
  extends: .headers:base
  image: $CI_REGISTRY_IMAGE:mtk
  variables:
    CROSS: mipsel-mtk-linux-
  dependencies:
    - docker:mtk

.headers:octeon:
  extends: .headers:base
  image: $CI_REGISTRY_IMAGE:octeon
  variables:
    CROSS: mips64-octeon-linux-
  dependencies:
    - docker:octeon


# E50
headers:e50:v1:
  extends: .headers:mtk
  variables:
    SOURCE: $E50_SRC_v1
    DEVICE: e50
    VERSION: 1

headers:e50:v2:
  extends: .headers:mipsel
  variables:
    SOURCE: $E50_SRC_v2
    DEVICE: e50
    VERSION: 2

# E100
headers:e100:v1:
  extends: .headers:octeon
  variables:
    SOURCE: $E100_SRC_v1
    DEVICE: e100
    VERSION: 1

headers:e100:v2:
  extends: .headers:octeon
  variables:
    SOURCE: $E100_SRC_v2
    DEVICE: e100
    VERSION: 2

# E200
headers:e200:v1:
  extends: .headers:octeon
  variables:
    SOURCE: $E200_SRC_v1
    DEVICE: e200
    VERSION: 1

headers:e200:v2:
  extends: .headers:octeon
  variables:
    SOURCE: $E200_SRC_v2
    DEVICE: e200
    VERSION: 2

# E300
headers:e300:v1:
  extends: .headers:octeon
  variables:
    SOURCE: $E300_SRC_v1
    DEVICE: e300
    VERSION: 1

headers:e300:v2:
  extends: .headers:octeon
  variables:
    SOURCE: $E300_SRC_v2
    DEVICE: e300
    VERSION: 2

# E1000
headers:e1000:v1:
  extends: .headers:octeon
  variables:
    SOURCE: $E1000_SRC_v1
    DEVICE: e1000
    VERSION: 1

headers:e1000:v2:
  extends: .headers:octeon
  variables:
    SOURCE: $E1000_SRC_v2
    DEVICE: e1000
    VERSION: 2

# UGW3
headers:ugw3:
  extends: .headers:octeon
  variables:
    SOURCE: $UGW3_SRC
    DEVICE: ugw3
    VERSION: 1

# UGW4
headers:ugw4:
  extends: .headers:octeon
  variables:
    SOURCE: $UGW4_SRC
    DEVICE: ugw4
    VERSION: 1

# UGWXG
headers:ugwxg:
  extends: .headers:octeon
  variables:
    SOURCE: $UGWXG_SRC
    DEVICE: ugwxg
    VERSION: 1
